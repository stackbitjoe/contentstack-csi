// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface IBackgroundImageFields {
    /** Image */
    url?: Asset | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** Background size */
    backgroundSize?: 'auto' | 'cover' | 'contain' | undefined;

    /** Background position */
    backgroundPosition?: 'bottom' | 'center' | 'left' | 'left-bottom' | 'left-top' | 'right' | 'right-bottom' | 'right-top' | 'top' | undefined;

    /** Background repeat */
    backgroundRepeat?: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat' | undefined;

    /** Opacity */
    opacity?: number | undefined;
}

export interface IBackgroundImage extends Entry<IBackgroundImageFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'BackgroundImage';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IBadgeFields {
    /** Label */
    label: string;

    /** Color */
    color?: 'text-dark' | 'text-light' | 'text-neutral' | 'text-primary' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IBadge extends Entry<IBadgeFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Badge';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IButtonFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Show icon */
    showIcon?: boolean | undefined;

    /** Icon */
    icon?:
        | 'arrowDown'
        | 'arrowLeft'
        | 'arrowRight'
        | 'arrowUp'
        | 'chevronDown'
        | 'chevronLeft'
        | 'chevronBigLeft'
        | 'chevronRight'
        | 'chevronBigRight'
        | 'chevronUp'
        | 'facebook'
        | 'github'
        | 'instagram'
        | 'linkedin'
        | 'mail'
        | 'play'
        | 'reddit'
        | 'send'
        | 'shoppingBag'
        | 'twitter'
        | 'vimeo'
        | 'youtube'
        | undefined;

    /** Icon position */
    iconPosition?: 'left' | 'right' | undefined;

    /** Style */
    style?: 'primary' | 'secondary' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface IButton extends Entry<IButtonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Button';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ICarouselSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Items */
    items?: IFeaturedItem[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'next-prev-nav' | 'dots-nav' | 'tabs-nav' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ICarouselSection extends Entry<ICarouselSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'CarouselSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ICheckboxFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ICheckboxFormControl extends Entry<ICheckboxFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'CheckboxFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IConfigFields {
    /** Favicon */
    favicon?: Asset | undefined;

    /** Header configuration */
    header?: IHeader | undefined;

    /** Footer configuration */
    footer?: IFooter | undefined;

    /** Suffix for page titles */
    titleSuffix?: string | undefined;

    /** Default image for social sharing */
    defaultSocialImage?: Asset | undefined;

    /** Default additional meta tags */
    defaultMetaTags?: IMetaTag[] | undefined;
}

export interface IConfig extends Entry<IConfigFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Config';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IDividerSectionFields {
    /** Title */
    title?: string | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IDividerSection extends Entry<IDividerSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'DividerSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IEmailFormControlFields {
    /** Name */
    name?: string | undefined;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface IEmailFormControl extends Entry<IEmailFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'EmailFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedItemFields {
    /** Title */
    title: string;

    /** Tagline */
    tagline?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Image */
    image?: IImageBlock | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-neutralAlt-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedItem extends Entry<IFeaturedItemFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedItem';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedItemsSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Items */
    items?: IFeaturedItem[] | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'two-col-grid' | 'three-col-grid' | 'small-list' | 'big-list' | 'toggle-list' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedItemsSection extends Entry<IFeaturedItemsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedItemsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedPeopleSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** People */
    people?: IPerson[] | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'three-col-grid' | 'four-col-grid' | 'mixed-grid' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedPeopleSection extends Entry<IFeaturedPeopleSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedPeopleSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedPostsSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Posts */
    posts?: IPostLayout[] | undefined;

    /** Show post thumbnail */
    showThumbnail?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'two-col-grid' | 'three-col-grid' | 'small-list' | 'big-list' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedPostsSection extends Entry<IFeaturedPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFooterFields {
    /** Logo */
    logo?: IImageBlock | undefined;

    /** Title */
    title?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Primary Links */
    primaryLinks?: IFooterLinksGroup | undefined;

    /** Secondary Links */
    secondaryLinks?: IFooterLinksGroup | undefined;

    /** Social links */
    socialLinks?: ISocial[] | undefined;

    /** Legal links */
    legalLinks?: ILink[] | undefined;

    /** Copyright text */
    copyrightText?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFooter extends Entry<IFooterFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Footer';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFooterLinksGroupFields {
    /** Title */
    title?: string | undefined;

    /** Links */
    links?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFooterLinksGroup extends Entry<IFooterLinksGroupFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FooterLinksGroup';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFormBlockFields {
    /** Fields */
    fields?: (ITextFormControl | IEmailFormControl | ITextareaFormControl | ICheckboxFormControl | ISelectFormControl)[] | undefined;

    /** Submit button */
    submitButton?: ISubmitButtonFormControl | undefined;

    /** Action (form submission URL) */
    action?: string | undefined;

    /** Destination (email to redirect responses) */
    destination?: string | undefined;

    /** Element ID */
    elementId: string;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFormBlock extends Entry<IFormBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FormBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IGenericSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Media */
    media?: IFormBlock | IImageBlock | IVideoBlock | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;

    /** Variants */
    nt_variants?: IGenericSection[] | undefined;

    /** Audience */
    nt_audience?: INtAudience | undefined;
}

export interface IGenericSection extends Entry<IGenericSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'GenericSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IHeaderFields {
    /** Title */
    title?: string | undefined;

    /** Logo */
    logo?: IImageBlock | undefined;

    /** Primary links */
    primaryLinks?: (IButton | ILink | ISubNav)[] | undefined;

    /** Secondary links */
    secondaryLinks?: (IButton | ILink)[] | undefined;

    /** Arrangement */
    variant?:
        | 'logo-left-primary-nav-left'
        | 'logo-left-primary-nav-centered'
        | 'logo-left-primary-nav-right'
        | 'logo-centered-primary-nav-left'
        | 'logo-centered-primary-nav-centered'
        | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IHeader extends Entry<IHeaderFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Header';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IImageBlockFields {
    /** Image */
    url?: Asset | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IImageBlock extends Entry<IImageBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ImageBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IImageGallerySectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Images */
    images?: IImageBlock[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Motion */
    motion?: 'static' | 'move-to-left' | 'move-to-right' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IImageGallerySection extends Entry<IImageGallerySectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ImageGallerySection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ILinkFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Show icon */
    showIcon?: boolean | undefined;

    /** Icon */
    icon?:
        | 'arrowDown'
        | 'arrowLeft'
        | 'arrowRight'
        | 'arrowUp'
        | 'chevronDown'
        | 'chevronLeft'
        | 'chevronBigLeft'
        | 'chevronRight'
        | 'chevronBigRight'
        | 'chevronUp'
        | 'facebook'
        | 'github'
        | 'instagram'
        | 'linkedin'
        | 'mail'
        | 'play'
        | 'reddit'
        | 'send'
        | 'shoppingBag'
        | 'twitter'
        | 'vimeo'
        | 'youtube'
        | undefined;

    /** Icon position */
    iconPosition?: 'left' | 'right' | undefined;

    /** Style */
    style?: 'primary' | 'secondary' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface ILink extends Entry<ILinkFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Link';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IMetaTagFields {
    /** Property */
    property?:
        | 'og:title'
        | 'og:type'
        | 'og:image'
        | 'og:image:alt'
        | 'og:url'
        | 'og:description'
        | 'og:locale'
        | 'og:site_name'
        | 'og:video'
        | 'twitter:card'
        | 'twitter:site'
        | 'twitter:creator'
        | 'twitter:description'
        | 'twitter:title'
        | 'twitter:image'
        | 'twitter:image:alt'
        | 'twitter:player'
        | undefined;

    /** Content */
    content?: string | undefined;
}

export interface IMetaTag extends Entry<IMetaTagFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'MetaTag';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface INtAudienceFields {
    /** Name */
    nt_name: string;

    /** Description */
    nt_description?: string | undefined;

    /** Rules */
    nt_rules: Record<string, any>;

    /** Audience Id */
    nt_audience_id: string;
}

/** Ninetailed Audience */

export interface INtAudience extends Entry<INtAudienceFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'nt_audience';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface INtMergetagFields {
    /** Name */
    nt_name: string;

    /** Fallback */
    nt_fallback?: string | undefined;

    /** Merge Tag Id */
    nt_mergetag_id: string;
}

/** Ninetailed Merge Tag */

export interface INtMergetag extends Entry<INtMergetagFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'nt_mergetag';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPagedPostsSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Show post thumbnail */
    showThumbnail?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'two-col-grid' | 'three-col-grid' | 'small-list' | 'big-list' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPagedPostsSection extends Entry<IPagedPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PagedPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPageLayoutFields {
    /** Title */
    title: string;

    /** Slug */
    slug: string;

    /** Sections */
    sections?:
        | (
              | ICarouselSection
              | IDividerSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IGenericSection
              | IImageGallerySection
              | IPricingSection
              | IRecentPostsSection
          )[]
        | undefined;

    /** Draft */
    isDraft?: boolean | undefined;

    /** SEO */
    seo?: ISeo | undefined;
}

export interface IPageLayout extends Entry<IPageLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PageLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPersonFields {
    /** Name */
    name: string;

    /** Role */
    role?: string | undefined;

    /** Bio */
    bio?: string | undefined;

    /** Image */
    image?: IImageBlock | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-neutralAlt-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPerson extends Entry<IPersonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Person';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostFeedLayoutFields {
    /** Title */
    title?: string | undefined;

    /** Slug */
    slug: string;

    /** Post feed */
    postFeed?: IPagedPostsSection | undefined;

    /** Number of posts per page */
    numOfPostsPerPage?: number | undefined;

    /** Enable search */
    enableSearch?: boolean | undefined;

    /** Top sections */
    topSections?:
        | (
              | ICarouselSection
              | IDividerSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IGenericSection
              | IImageGallerySection
              | IPricingSection
              | IRecentPostsSection
          )[]
        | undefined;

    /** Bottom sections */
    bottomSections?:
        | (
              | ICarouselSection
              | IDividerSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IGenericSection
              | IImageGallerySection
              | IPricingSection
              | IRecentPostsSection
          )[]
        | undefined;

    /** Draft */
    isDraft?: boolean | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;

    /** SEO */
    seo?: ISeo | undefined;
}

export interface IPostFeedLayout extends Entry<IPostFeedLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostFeedLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostFeedSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Show post thumbnail */
    showThumbnail?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'two-col-grid' | 'three-col-grid' | 'small-list' | 'big-list' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPostFeedSection extends Entry<IPostFeedSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostFeedSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostLayoutFields {
    /** Title */
    title: string;

    /** Slug */
    slug: string;

    /** Date */
    date: string;

    /** Author */
    author?: IPerson | undefined;

    /** Excerpt */
    excerpt?: string | undefined;

    /** Featured image */
    featuredImage?: IImageBlock | undefined;

    /** Content */
    content?: string | undefined;

    /** Sections */
    bottomSections?:
        | (
              | ICarouselSection
              | IDividerSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IGenericSection
              | IImageGallerySection
              | IPricingSection
              | IRecentPostsSection
          )[]
        | undefined;

    /** Exclude from blog feed */
    isFeatured?: boolean | undefined;

    /** Draft */
    isDraft?: boolean | undefined;

    /** SEO */
    seo?: ISeo | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-neutralAlt-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPostLayout extends Entry<IPostLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPricingPlanFields {
    /** Title */
    title?: string | undefined;

    /** Price */
    price?: string | undefined;

    /** Details */
    details?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Features */
    features?: string[] | undefined;

    /** Image */
    image?: IImageBlock | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-neutralAlt-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPricingPlan extends Entry<IPricingPlanFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PricingPlan';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPricingSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Plans */
    plans?: IPricingPlan[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPricingSection extends Entry<IPricingSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PricingSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IRecentPostsSectionFields {
    /** Title */
    title?: ITitleBlock | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Number of recent posts to show */
    recentCount?: number | undefined;

    /** Show post thumbnail */
    showThumbnail?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'two-col-grid' | 'three-col-grid' | 'small-list' | 'big-list' | undefined;

    /** Colors */
    colors?: 'bg-light-fg-dark' | 'bg-neutral-fg-dark' | 'bg-dark-fg-light' | undefined;

    /** Background image */
    backgroundImage?: IBackgroundImage | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IRecentPostsSection extends Entry<IRecentPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'RecentPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISelectFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Default value */
    defaultValue?: string | undefined;

    /** Options */
    options?: string[] | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ISelectFormControl extends Entry<ISelectFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'SelectFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISeoFields {
    /** Title meta tag (overrides title) */
    metaTitle?: string | undefined;

    /** Description meta tag */
    metaDescription?: string | undefined;

    /** Add title suffix */
    addTitleSuffix?: boolean | undefined;

    /**  Image for social sharing */
    socialImage?: Asset | undefined;

    /** Additional meta tags */
    metaTags?: IMetaTag[] | undefined;
}

export interface ISeo extends Entry<ISeoFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Seo';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISocialFields {
    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Icon */
    icon: 'facebook' | 'github' | 'instagram' | 'linkedin' | 'mail' | 'reddit' | 'twitter' | 'vimeo' | 'youtube';

    /** Element ID */
    elementId?: string | undefined;
}

export interface ISocial extends Entry<ISocialFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Social';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISubmitButtonFormControlFields {
    /** Label */
    label?: string | undefined;

    /** Show icon */
    showIcon?: boolean | undefined;

    /** Icon */
    icon?:
        | 'arrowDown'
        | 'arrowLeft'
        | 'arrowRight'
        | 'arrowUp'
        | 'chevronDown'
        | 'chevronLeft'
        | 'chevronBigLeft'
        | 'chevronRight'
        | 'chevronBigRight'
        | 'chevronUp'
        | 'facebook'
        | 'github'
        | 'instagram'
        | 'linkedin'
        | 'mail'
        | 'play'
        | 'reddit'
        | 'send'
        | 'shoppingBag'
        | 'twitter'
        | 'vimeo'
        | 'youtube'
        | undefined;

    /** Icon position */
    iconPosition?: 'left' | 'right' | undefined;

    /** Style */
    style?: 'primary' | 'secondary' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface ISubmitButtonFormControl extends Entry<ISubmitButtonFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'SubmitButtonFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISubNavFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** Links */
    links?: ILink[] | undefined;

    /** Label style */
    labelStyle?: 'primary' | 'secondary' | undefined;
}

export interface ISubNav extends Entry<ISubNavFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'SubNav';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITextareaFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ITextareaFormControl extends Entry<ITextareaFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TextareaFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITextFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ITextFormControl extends Entry<ITextFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TextFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleFields {
    /** Light */
    light?: string | undefined;

    /** Dark */
    dark?: string | undefined;

    /** Neutral */
    neutral?: string | undefined;

    /** Neutral alt */
    neutralAlt?: string | undefined;

    /** Primary */
    primary?: string | undefined;

    /** Font - body & captions */
    fontBody?: 'sans' | 'serif' | undefined;

    /** Font - headlines & subtitles */
    fontHeadlines?: 'sans' | 'serif' | undefined;

    /** H1 */
    h1?: IThemeStyleHeading | undefined;

    /** H2 */
    h2?: IThemeStyleHeading | undefined;

    /** H3 */
    h3?: IThemeStyleHeading | undefined;

    /** H4 */
    h4?: IThemeStyleHeading | undefined;

    /** H5 */
    h5?: IThemeStyleHeading | undefined;

    /** H6 */
    h6?: IThemeStyleHeading | undefined;

    /** Primary button */
    buttonPrimary?: IThemeStyleButton | undefined;

    /** Secondary button */
    buttonSecondary?: IThemeStyleButton | undefined;

    /** Primary link */
    linkPrimary?: IThemeStyleLink | undefined;

    /** Secondary link */
    linkSecondary?: IThemeStyleLink | undefined;
}

export interface IThemeStyle extends Entry<IThemeStyleFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyle';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleButtonFields {
    /** Font weight */
    weight?: 'normal' | 'medium' | 'bold' | undefined;

    /** Case */
    case?: 'none' | 'lowercase' | 'capitalize' | 'uppercase' | undefined;

    /** Letter spacing */
    letterSpacing?: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider' | undefined;

    /** Corner radius */
    borderRadius?: 'none' | 'DEFAULT' | 'lg' | 'xl' | 'full' | undefined;

    /** Shadow */
    shadow?: 'none' | 'md' | 'xl' | undefined;

    /** Horizontal padding */
    horizontalPadding?: number | undefined;

    /** Vertical padding */
    verticalPadding?: number | undefined;
}

export interface IThemeStyleButton extends Entry<IThemeStyleButtonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyleButton';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleHeadingFields {
    /** Font size */
    size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | undefined;

    /** Font weight */
    weight?: 'normal' | 'medium' | 'bold' | undefined;

    /** Decoration */
    decoration?: 'none' | 'underline' | 'line-through' | undefined;

    /** Case */
    case?: 'none' | 'lowercase' | 'capitalize' | 'uppercase' | undefined;

    /** Letter spacing */
    letterSpacing?: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider' | undefined;
}

export interface IThemeStyleHeading extends Entry<IThemeStyleHeadingFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyleHeading';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleLinkFields {
    /** Font weight */
    weight?: 'normal' | 'medium' | 'bold' | undefined;

    /** Case */
    case?: 'none' | 'lowercase' | 'capitalize' | 'uppercase' | undefined;

    /** Letter spacing */
    letterSpacing?: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider' | undefined;
}

export interface IThemeStyleLink extends Entry<IThemeStyleLinkFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyleLink';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITitleBlockFields {
    /** Text */
    text?: string | undefined;

    /** Color */
    color?: 'text-dark' | 'text-light' | 'text-neutral' | 'text-primary' | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ITitleBlock extends Entry<ITitleBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TitleBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IVideoBlockFields {
    /** Title */
    title?: string | undefined;

    /** Video URL (YouTube, Vimeo, .mp4) */
    url?: string | undefined;

    /** Autoplay */
    autoplay?: boolean | undefined;

    /** Loop */
    loop?: boolean | undefined;

    /** Muted */
    muted?: boolean | undefined;

    /** Controls */
    controls?: boolean | undefined;

    /** Aspect ratio */
    aspectRatio?: '4:3' | '16:9' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IVideoBlock extends Entry<IVideoBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'VideoBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export type CONTENT_TYPE =
    | 'BackgroundImage'
    | 'Badge'
    | 'Button'
    | 'CarouselSection'
    | 'CheckboxFormControl'
    | 'Config'
    | 'DividerSection'
    | 'EmailFormControl'
    | 'FeaturedItem'
    | 'FeaturedItemsSection'
    | 'FeaturedPeopleSection'
    | 'FeaturedPostsSection'
    | 'Footer'
    | 'FooterLinksGroup'
    | 'FormBlock'
    | 'GenericSection'
    | 'Header'
    | 'ImageBlock'
    | 'ImageGallerySection'
    | 'Link'
    | 'MetaTag'
    | 'nt_audience'
    | 'nt_mergetag'
    | 'PagedPostsSection'
    | 'PageLayout'
    | 'Person'
    | 'PostFeedLayout'
    | 'PostFeedSection'
    | 'PostLayout'
    | 'PricingPlan'
    | 'PricingSection'
    | 'RecentPostsSection'
    | 'SelectFormControl'
    | 'Seo'
    | 'Social'
    | 'SubmitButtonFormControl'
    | 'SubNav'
    | 'TextareaFormControl'
    | 'TextFormControl'
    | 'ThemeStyle'
    | 'ThemeStyleButton'
    | 'ThemeStyleHeading'
    | 'ThemeStyleLink'
    | 'TitleBlock'
    | 'VideoBlock';

export type LOCALE_CODE = 'en-US';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US';
